{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","TotalCounter","evt","target","textContent","prevState","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VAaeA,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAClB,OACI,0BAASC,UAAU,UAAnB,UACI,oBAAIA,UAAU,kBAAd,SAAiCF,IAChCC,M,MCWFE,MAhBf,YAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAC5B,OACI,qBAAKH,UAAU,oBAAf,SACKE,EAAQE,KAAI,SAAAC,GAAM,OACf,wBACIL,UAAU,SACVM,QAASH,EAFb,SAKKE,GAFIA,S,MCKdE,MAZf,YAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBACzC,OACI,sBAAKZ,UAAU,aAAf,UACI,uCAAUQ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,MCADC,MAPf,YAAmC,IAAXC,EAAU,EAAVA,QAChB,OACI,mBAAGd,UAAU,wBAAb,SAAsCc,KCwDnCC,MAtDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAEMC,EAAe,WACjB,OAAOZ,EAAOC,EAAUC,GA0B1B,OACE,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,QAAS,CAAC,MAAM,UAAU,QAASC,gBAnB3C,SAACkB,GAChB,MAA+B,QAA3BA,EAAIC,OAAOC,YAEXJ,GAAO,SAAAK,GAAS,OAAIA,EAAY,KAEH,YAA3BH,EAAIC,OAAOC,YAEbL,GAAW,SAAAM,GAAS,OAAIA,EAAY,KAEP,SAA3BH,EAAIC,OAAOC,YAEbN,GAAQ,SAAAO,GAAS,OAAIA,EAAY,UAFnC,OAYE,cAAC,EAAD,CAAS1B,MAAM,aAAf,SACsB,IAAnBsB,IACC,cAAC,EAAD,CAAcN,QAAQ,sBACtB,cAAC,EAAD,CACAN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAnCO,IAATJ,EACO,EAEJiB,KAAKC,MAAOlB,EAAOY,IAAkB,aCRnCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da2a4072.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Section.css';\r\n\r\n\r\nfunction Section({ title, children }) {\r\n        return (\r\n            <section className=\"Section\">\r\n                <h2 className=\"Section__header\">{title}</h2>\r\n                {children}\r\n            </section>\r\n        )\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport './FeedbackOptions.css';\r\n\r\nfunction FeedbackOptions ({options, onLeaveFeedback}) {\r\n        return (\r\n            <div className=\"Button__container\">\r\n                {options.map(option => (\r\n                    <button\r\n                        className=\"Button\"\r\n                        onClick={onLeaveFeedback}\r\n                        key={option}\r\n                    >\r\n                        {option}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport './Statistics.css';\r\n\r\nfunction Statistics ({good, neutral, bad, total, positivePercentage}) {\r\n        return(\r\n            <div className=\"Statistics\">\r\n                <p>Good: {good }</p>\r\n                <p>Neutral: {neutral }</p>\r\n                <p>Bad: {bad }</p>\r\n                <p>Total: {total }</p>\r\n                <p>Positive feedback: {positivePercentage }%</p>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport './Notification.css';\r\n\r\nfunction Notification ({message}) {\r\n        return (\r\n            <p className=\"Notification__content\">{message}</p>\r\n        )\r\n    \r\n}\r\n\r\nexport default Notification;","import React, { useState } from 'react';\nimport './App.css';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const TotalCounter = () => {\n      return good + neutral + bad;\n  }\n\n  const PositivePercentage = () => {\n      if (good === 0) {\n          return 0;\n      }\n      return Math.round((good / TotalCounter()) * 100);\n  }\n\n  const btnClick = (evt) => {\n    if (evt.target.textContent === 'Bad') {\n      return (\n        setBad(prevState => prevState + 1)\n      )\n    } if (evt.target.textContent === 'Neutral') {\n      return (\n        setNeutral(prevState => prevState + 1)\n      )\n    } if (evt.target.textContent === 'Good') {\n      return (\n        setGood(prevState => prevState + 1)\n      )\n    } \n  }\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={['Bad','Neutral','Good']} onLeaveFeedback={btnClick}/>\n        </Section>\n        <Section title=\"Statistics\">\n          {TotalCounter() === 0 ?\n            <Notification message=\"No feedback given\" /> :\n            <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={TotalCounter()}\n            positivePercentage={PositivePercentage()}\n            />\n          }\n        </Section>\n      </div>\n    )\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}