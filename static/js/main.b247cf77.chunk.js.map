{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Section","className","this","props","title","children","Component","FeedbackOptions","options","map","option","onClick","onLeaveFeedback","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","TotalCounter","PositivePercentage","Math","round","btnClick","evt","target","textContent","setState","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mXAeeA,E,4JAVX,WACI,OACI,0BAASC,UAAU,UAAnB,UACI,oBAAIA,UAAU,kBAAd,SAAiCC,KAAKC,MAAMC,QAC3CF,KAAKC,MAAME,gB,GALNC,aCiBPC,G,kKAjBX,WAAU,IAAD,OACL,OACI,qBAAKN,UAAU,oBAAf,SACKC,KAAKC,MAAMK,QAAQC,KAAI,SAAAC,GAAM,OAC1B,wBACIT,UAAU,SACVU,QAAS,EAAKR,MAAMS,gBAFxB,SAKKF,GAFIA,Y,GARCJ,cCcfO,G,kKAbX,WACI,OACI,sBAAKZ,UAAU,aAAf,UACI,uCAAUC,KAAKC,MAAMW,QACrB,0CAAaZ,KAAKC,MAAMY,WACxB,sCAASb,KAAKC,MAAMa,OACpB,wCAAWd,KAAKC,MAAMc,SACtB,oDAAuBf,KAAKC,MAAMe,mBAAlC,c,GARSZ,cCQVa,G,kKAPX,WACI,OACI,mBAAGlB,UAAU,wBAAb,SAAsCC,KAAKC,MAAMiB,c,GAHlCd,cC6DZe,E,4MAxDbC,MAAQ,CACFR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGXO,aAAe,WACX,OAAO,EAAKD,MAAMR,KAAO,EAAKQ,MAAMP,QAAU,EAAKO,MAAMN,K,EAG7DQ,mBAAqB,WACjB,OAAwB,IAApB,EAAKF,MAAMR,KACJ,EAEJW,KAAKC,MAAO,EAAKJ,MAAMR,KAAO,EAAKS,eAAkB,M,EAGhEI,SAAW,SAACC,GACV,MAA+B,QAA3BA,EAAIC,OAAOC,YAEX,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEhB,IAAKgB,EAAUhB,IAAM,MAEtB,YAA3BY,EAAIC,OAAOC,YAEb,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEjB,QAASiB,EAAUjB,QAAU,MAE9B,SAA3Ba,EAAIC,OAAOC,YAEb,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAElB,KAAMkB,EAAUlB,KAAO,WAFvD,G,4CAOJ,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,CAASG,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,QAAS,CAAC,MAAM,UAAU,QAASI,gBAAiBV,KAAKyB,aAE5E,cAAC,EAAD,CAASvB,MAAM,aAAf,SAC2B,IAAxBF,KAAKqB,eACJ,cAAC,EAAD,CAAcH,QAAQ,sBACtB,cAAC,EAAD,CACAN,KAAMZ,KAAKoB,MAAMR,KACjBC,QAASb,KAAKoB,MAAMP,QACpBC,IAAKd,KAAKoB,MAAMN,IAChBC,MAAOf,KAAKqB,eACZL,mBAAoBhB,KAAKsB,gC,GAhDnBlB,aCKH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b247cf77.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Section.css';\r\n\r\n\r\nclass Section extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"Section\">\r\n                <h2 className=\"Section__header\">{this.props.title}</h2>\r\n                {this.props.children}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport './FeedbackOptions.css';\r\n\r\nclass FeedbackOptions extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Button__container\">\r\n                {this.props.options.map(option => (\r\n                    <button\r\n                        className=\"Button\"\r\n                        onClick={this.props.onLeaveFeedback}\r\n                        key={option}\r\n                    >\r\n                        {option}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FeedbackOptions;","import React, { Component } from 'react';\r\nimport './Statistics.css';\r\n\r\nclass Statistics extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"Statistics\">\r\n                <p>Good: {this.props.good }</p>\r\n                <p>Neutral: {this.props.neutral }</p>\r\n                <p>Bad: {this.props.bad }</p>\r\n                <p>Total: {this.props.total }</p>\r\n                <p>Positive feedback: {this.props.positivePercentage }%</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport './Notification.css';\r\n\r\nclass Notification extends Component {\r\n    render() {\r\n        return (\r\n            <p className=\"Notification__content\">{this.props.message}</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    };\n\n  TotalCounter = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  PositivePercentage = () => {\n      if (this.state.good === 0) {\n          return 0;\n      }\n      return Math.round((this.state.good / this.TotalCounter()) * 100);\n  }\n\n  btnClick = (evt) => {\n    if (evt.target.textContent === 'Bad') {\n      return (\n        this.setState(prevState => ({ bad: prevState.bad + 1 }))\n      )\n    } if (evt.target.textContent === 'Neutral') {\n      return (\n        this.setState(prevState => ({ neutral: prevState.neutral + 1 }))\n      )\n    } if (evt.target.textContent === 'Good') {\n      return (\n        this.setState(prevState => ({ good: prevState.good + 1 }))\n      )\n    } \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={['Bad','Neutral','Good']} onLeaveFeedback={this.btnClick}/>\n        </Section>\n        <Section title=\"Statistics\">\n          {this.TotalCounter() === 0 ?\n            <Notification message=\"No feedback given\" /> :\n            <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.TotalCounter()}\n            positivePercentage={this.PositivePercentage()}\n            />\n          }\n        </Section>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}